[{"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/index.js":"1","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/App.js":"2","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/reportWebVitals.js":"3","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/layout/Title.js":"4","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/lists/Todos.js":"5","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/graphql/queries.js":"6","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/listitems/Todo.js":"7","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/forms/AddTodo.js":"8","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/forms/UpdateTodo.js":"9","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/buttons/RemoveTodo.js":"10"},{"size":500,"mtime":1607210907344,"results":"11","hashOfConfig":"12"},{"size":558,"mtime":1607319579881,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607210907347,"results":"14","hashOfConfig":"12"},{"size":280,"mtime":1607213098924,"results":"15","hashOfConfig":"12"},{"size":843,"mtime":1607999207971,"results":"16","hashOfConfig":"12"},{"size":616,"mtime":1607388979703,"results":"17","hashOfConfig":"12"},{"size":2040,"mtime":1607999021072,"results":"18","hashOfConfig":"12"},{"size":2154,"mtime":1608000332520,"results":"19","hashOfConfig":"12"},{"size":1970,"mtime":1607389343894,"results":"20","hashOfConfig":"12"},{"size":1294,"mtime":1607317749234,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dl6y9a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/index.js",[],["44","45"],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/App.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/reportWebVitals.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/layout/Title.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/lists/Todos.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/graphql/queries.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/listitems/Todo.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/forms/AddTodo.js",[],"/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/forms/UpdateTodo.js",["46"],"import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_TODO } from '../../graphql/queries'\n\n\nconst UpdateTodo = (props) => {\n\n    const [id] = useState(props.id)\n    const [item, setItem] = useState(props.item)\n    const [updateTodo] = useMutation(UPDATE_TODO)\n  \n    const [form] = Form.useForm()\n    const [, forceUpdate] = useState()\n\n    useEffect(() => {\n        forceUpdate({})\n    }, [])\n\n    const onFinish = (values) => {\n        const { item} = values\n        updateTodo({\n            variables: {\n                id,\n                item\n            },\n            optimisticResponse: {\n                __typename: 'Mutation',\n                updateTodo: {\n                    __typename: 'Todo',\n                    id,\n                    item\n                }\n            }\n        })\n        props.onButtonClick()\n    }   \n\n    return (\n        <Form\n            form={form}\n            name='update-todo-form'\n            layout='inline'\n            onFinish={onFinish}\n            initialValues={{\n                item: item\n            }}\n            size='large'\n        >\n            <Form.Item\n                name='item'\n                rules={[{ required: true, message: 'Please input your task!' }]}\n            >\n                <Input\n                    onChange={e => props.updateStateVariable('item', e.target.value)}\n                    placeholder='input your task'\n                />\n            </Form.Item>\n            <Form.Item shouldUpdate={true}>\n                {() => (\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                    >\n                        Update Todo\n                    </Button>\n                )}\n            </Form.Item>\n            <Button onClick={props.onButtonClick}>Cancel</Button>\n        </Form>\n    )\n}\n\n\nexport default UpdateTodo\n","/Users/saebyeol/Documents/saebyeol/00_practice/react/noteApp/client/src/components/buttons/RemoveTodo.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":10,"column":18,"nodeType":"53","messageId":"54","endLine":10,"endColumn":25},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'setItem' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]